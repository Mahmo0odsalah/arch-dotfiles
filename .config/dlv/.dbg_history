help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
clearall
break f server.go:31
c
packet
print packet
print CRLF
print CR
print byte("\n")
print "\n"
print byte(1)
print string(1)
print []byte(1)
print []byte(\n)
print []byte("\n")
[79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
x := {79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13}
x := [79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
print string({79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
print string([79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13])
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
clearall
break f server.go:31
c
packet
print packet
print CRLF
print CR
print byte("\n")
print "\n"
print byte(1)
print string(1)
print []byte(1)
print []byte(\n)
print []byte("\n")
[79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
x := {79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13}
x := [79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
print string({79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
print string([79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13])
q
print string([]byte{79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
c
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
clearall
break f server.go:31
c
packet
print packet
print CRLF
print CR
print byte("\n")
print "\n"
print byte(1)
print string(1)
print []byte(1)
print []byte(\n)
print []byte("\n")
[79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
x := {79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13}
x := [79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
print string({79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
print string([79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13])
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
clearall
break f server.go:31
c
packet
print packet
print CRLF
print CR
print byte("\n")
print "\n"
print byte(1)
print string(1)
print []byte(1)
print []byte(\n)
print []byte("\n")
[79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
x := {79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13}
x := [79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
print string({79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
print string([79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13])
q
print string([]byte{79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
c
q
break parse parser.go:67
break f parser.go:67
help
break f parser.go:67
break f server.go:31
clearall
break f parser.go:1
break f parser.go:66
c
lines
print lines
n
sl
print sl
print strings.trim(sl[2])
print strings.Trim(sl[2])
print strings.TrimSpace(sl[2])
print strings
import "strings"
c
print strings.TrimSpace(sl[2])
n
print strings.TrimSpace(sl[2])
call sl2 := strings.TrimSpace(sl[2])
call strings.TrimSpace(sl[2])
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
clearall
break f server.go:31
c
packet
print packet
print CRLF
print CR
print byte("\n")
print "\n"
print byte(1)
print string(1)
print []byte(1)
print []byte(\n)
print []byte("\n")
[79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
x := {79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13}
x := [79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
print string({79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
print string([79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13])
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
clearall
break f server.go:31
c
packet
print packet
print CRLF
print CR
print byte("\n")
print "\n"
print byte(1)
print string(1)
print []byte(1)
print []byte(\n)
print []byte("\n")
[79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
x := {79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13}
x := [79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
print string({79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
print string([79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13])
q
print string([]byte{79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
c
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
clearall
break f server.go:31
c
packet
print packet
print CRLF
print CR
print byte("\n")
print "\n"
print byte(1)
print string(1)
print []byte(1)
print []byte(\n)
print []byte("\n")
[79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
x := {79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13}
x := [79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
print string({79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
print string([79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13])
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
clearall
break f server.go:31
c
packet
print packet
print CRLF
print CR
print byte("\n")
print "\n"
print byte(1)
print string(1)
print []byte(1)
print []byte(\n)
print []byte("\n")
[79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
x := {79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13}
x := [79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
print string({79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
print string([79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13])
q
print string([]byte{79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
c
q
break parse parser.go:67
break f parser.go:67
help
break f parser.go:67
break f server.go:31
clearall
break f parser.go:1
break f parser.go:66
c
lines
print lines
n
sl
print sl
print strings.trim(sl[2])
print strings.Trim(sl[2])
print strings.TrimSpace(sl[2])
print strings
import "strings"
c
print strings.TrimSpace(sl[2])
n
print strings.TrimSpace(sl[2])
call sl2 := strings.TrimSpace(sl[2])
call strings.TrimSpace(sl[2])
q
break f parser.go:68
c
sl[2]
print sl[2]
c
print lines
print sl
lines[1:]
print lines[1:]
print lines[-1]
print lines[:]
print lines[1]
print lines[len(line)]
print lines[line.Len]
print lines[line.Len()]
print lines[line.len]
print line.len
print line
print lines[lines.len]
print lines[len(lines)]
print lines
print lines.cap
print lines.Cap
print lines.Cap()
print lines.cap()
len(lines)
print len(lines)
print lines[len(lines)]
print lines[len(lines)-1]
lines[2]
print lines[2]
help print
print %s lines[2]
print %s lines[3]
print %s lines[4]
print %s lines[5]
print strings.Split(lines[1], ": ")
call strings.Split(lines[1], ": ")
c
startLine
print startLine
c
q
q
break parse parser.go:67
break f parser.go:67
help
break f parser.go:67
break f server.go:31
clearall
break f parser.go:1
break f parser.go:66
c
lines
print lines
n
sl
print sl
print strings.trim(sl[2])
print strings.Trim(sl[2])
print strings.TrimSpace(sl[2])
print strings
import "strings"
c
print strings.TrimSpace(sl[2])
n
print strings.TrimSpace(sl[2])
call sl2 := strings.TrimSpace(sl[2])
call strings.TrimSpace(sl[2])
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
clearall
break f server.go:31
c
packet
print packet
print CRLF
print CR
print byte("\n")
print "\n"
print byte(1)
print string(1)
print []byte(1)
print []byte(\n)
print []byte("\n")
[79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
x := {79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13}
x := [79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
print string({79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
print string([79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13])
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
clearall
break f server.go:31
c
packet
print packet
print CRLF
print CR
print byte("\n")
print "\n"
print byte(1)
print string(1)
print []byte(1)
print []byte(\n)
print []byte("\n")
[79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
x := {79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13}
x := [79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
print string({79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
print string([79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13])
q
print string([]byte{79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
c
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
clearall
break f server.go:31
c
packet
print packet
print CRLF
print CR
print byte("\n")
print "\n"
print byte(1)
print string(1)
print []byte(1)
print []byte(\n)
print []byte("\n")
[79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
x := {79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13}
x := [79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
print string({79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
print string([79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13])
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
clearall
break f server.go:31
c
packet
print packet
print CRLF
print CR
print byte("\n")
print "\n"
print byte(1)
print string(1)
print []byte(1)
print []byte(\n)
print []byte("\n")
[79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
x := {79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13}
x := [79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
print string({79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
print string([79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13])
q
print string([]byte{79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
c
q
break parse parser.go:67
break f parser.go:67
help
break f parser.go:67
break f server.go:31
clearall
break f parser.go:1
break f parser.go:66
c
lines
print lines
n
sl
print sl
print strings.trim(sl[2])
print strings.Trim(sl[2])
print strings.TrimSpace(sl[2])
print strings
import "strings"
c
print strings.TrimSpace(sl[2])
n
print strings.TrimSpace(sl[2])
call sl2 := strings.TrimSpace(sl[2])
call strings.TrimSpace(sl[2])
q
break f parser.go:68
c
sl[2]
print sl[2]
c
print lines
print sl
lines[1:]
print lines[1:]
print lines[-1]
print lines[:]
print lines[1]
print lines[len(line)]
print lines[line.Len]
print lines[line.Len()]
print lines[line.len]
print line.len
print line
print lines[lines.len]
print lines[len(lines)]
print lines
print lines.cap
print lines.Cap
print lines.Cap()
print lines.cap()
len(lines)
print len(lines)
print lines[len(lines)]
print lines[len(lines)-1]
lines[2]
print lines[2]
help print
print %s lines[2]
print %s lines[3]
print %s lines[4]
print %s lines[5]
print strings.Split(lines[1], ": ")
call strings.Split(lines[1], ": ")
c
startLine
print startLine
c
q
break f server.go:31
c
n
print Parse(packet)
c
n
p
print p
c
q
break f parser.go:1
break f parser.go:66
c
lines
print lines
n
sl
print sl
print strings.trim(sl[2])
print strings.Trim(sl[2])
print strings.TrimSpace(sl[2])
print strings
import "strings"
c
print strings.TrimSpace(sl[2])
n
print strings.TrimSpace(sl[2])
call sl2 := strings.TrimSpace(sl[2])
call strings.TrimSpace(sl[2])
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
clearall
break f server.go:31
c
packet
print packet
print CRLF
print CR
print byte("\n")
print "\n"
print byte(1)
print string(1)
print []byte(1)
print []byte(\n)
print []byte("\n")
[79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
x := {79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13}
x := [79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
print string({79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
print string([79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13])
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
clearall
break f server.go:31
c
packet
print packet
print CRLF
print CR
print byte("\n")
print "\n"
print byte(1)
print string(1)
print []byte(1)
print []byte(\n)
print []byte("\n")
[79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
x := {79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13}
x := [79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
print string({79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
print string([79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13])
q
print string([]byte{79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
c
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
clearall
break f server.go:31
c
packet
print packet
print CRLF
print CR
print byte("\n")
print "\n"
print byte(1)
print string(1)
print []byte(1)
print []byte(\n)
print []byte("\n")
[79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
x := {79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13}
x := [79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
print string({79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
print string([79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13])
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
clearall
break f server.go:31
c
packet
print packet
print CRLF
print CR
print byte("\n")
print "\n"
print byte(1)
print string(1)
print []byte(1)
print []byte(\n)
print []byte("\n")
[79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
x := {79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13}
x := [79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
print string({79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
print string([79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13])
q
print string([]byte{79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
c
q
break parse parser.go:67
break f parser.go:67
help
break f parser.go:67
break f server.go:31
clearall
break f parser.go:1
break f parser.go:66
c
lines
print lines
n
sl
print sl
print strings.trim(sl[2])
print strings.Trim(sl[2])
print strings.TrimSpace(sl[2])
print strings
import "strings"
c
print strings.TrimSpace(sl[2])
n
print strings.TrimSpace(sl[2])
call sl2 := strings.TrimSpace(sl[2])
call strings.TrimSpace(sl[2])
q
break f parser.go:68
c
sl[2]
print sl[2]
c
print lines
print sl
lines[1:]
print lines[1:]
print lines[-1]
print lines[:]
print lines[1]
print lines[len(line)]
print lines[line.Len]
print lines[line.Len()]
print lines[line.len]
print line.len
print line
print lines[lines.len]
print lines[len(lines)]
print lines
print lines.cap
print lines.Cap
print lines.Cap()
print lines.cap()
len(lines)
print len(lines)
print lines[len(lines)]
print lines[len(lines)-1]
lines[2]
print lines[2]
help print
print %s lines[2]
print %s lines[3]
print %s lines[4]
print %s lines[5]
print strings.Split(lines[1], ": ")
call strings.Split(lines[1], ": ")
c
startLine
print startLine
c
q
break f server.go:31
c
n
print Parse(packet)
c
n
p
print p
c
q
clearall
break server.go:40
c
p
print p
print p.Headers
q
print sl
print strings.trim(sl[2])
print strings.Trim(sl[2])
print strings.TrimSpace(sl[2])
print strings
import "strings"
c
print strings.TrimSpace(sl[2])
n
print strings.TrimSpace(sl[2])
call sl2 := strings.TrimSpace(sl[2])
call strings.TrimSpace(sl[2])
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
clearall
break f server.go:31
c
packet
print packet
print CRLF
print CR
print byte("\n")
print "\n"
print byte(1)
print string(1)
print []byte(1)
print []byte(\n)
print []byte("\n")
[79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
x := {79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13}
x := [79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
print string({79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
print string([79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13])
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
clearall
break f server.go:31
c
packet
print packet
print CRLF
print CR
print byte("\n")
print "\n"
print byte(1)
print string(1)
print []byte(1)
print []byte(\n)
print []byte("\n")
[79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
x := {79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13}
x := [79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
print string({79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
print string([79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13])
q
print string([]byte{79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
c
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
clearall
break f server.go:31
c
packet
print packet
print CRLF
print CR
print byte("\n")
print "\n"
print byte(1)
print string(1)
print []byte(1)
print []byte(\n)
print []byte("\n")
[79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
x := {79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13}
x := [79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
print string({79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
print string([79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13])
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
help
n
c
panic
msgs
c
q
help
n
c
panic
msgs
c
q
help
break help
help break
break f server.go:25
c
packet
help
display packet
help
print packet
print string(packet)
print targetConn
print targetConn.LocalAddr
targetConn, err := net.DialUDP("udp", nil, &targetAddr)
help
set targetConn, err := net.DialUDP("udp", nil, &targetAddr)
set "targetConn, err := net.DialUDP("udp", nil, &targetAddr)"
help
help break
clearall
break f1 server.go:18
r
c
err
print err
[]byte("3.78.135.122")
print []byte("3.78.135.122")
print targetAddr
print targetAddr.IP
print net.IPv4
print net.IPv4(3,78,135,122)
call net.IPv4(3,78,135,122)
print x:= net.IPv4(3,78,135,122)
x
q
clearall
c
q
clearall
break f server.go:31
c
packet
print packet
print CRLF
print CR
print byte("\n")
print "\n"
print byte(1)
print string(1)
print []byte(1)
print []byte(\n)
print []byte("\n")
[79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
x := {79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13}
x := [79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13]
print string({79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
print string([79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13])
q
print string([]byte{79,80,84,73,79,78,83,32,115,105,112,58,49,50,55,46,48,46,48,46,49,58,53,48,54,48,32,83,73,80,47,50,46,48,13})
c
q
break parse parser.go:67
break f parser.go:67
help
break f parser.go:67
break f server.go:31
clearall
break f parser.go:1
break f parser.go:66
c
lines
print lines
n
sl
print sl
print strings.trim(sl[2])
print strings.Trim(sl[2])
print strings.TrimSpace(sl[2])
print strings
import "strings"
c
print strings.TrimSpace(sl[2])
n
print strings.TrimSpace(sl[2])
call sl2 := strings.TrimSpace(sl[2])
call strings.TrimSpace(sl[2])
q
break f parser.go:68
c
sl[2]
print sl[2]
c
print lines
print sl
lines[1:]
print lines[1:]
print lines[-1]
print lines[:]
print lines[1]
print lines[len(line)]
print lines[line.Len]
print lines[line.Len()]
print lines[line.len]
print line.len
print line
print lines[lines.len]
print lines[len(lines)]
print lines
print lines.cap
print lines.Cap
print lines.Cap()
print lines.cap()
len(lines)
print len(lines)
print lines[len(lines)]
print lines[len(lines)-1]
lines[2]
print lines[2]
help print
print %s lines[2]
print %s lines[3]
print %s lines[4]
print %s lines[5]
print strings.Split(lines[1], ": ")
call strings.Split(lines[1], ": ")
c
startLine
print startLine
c
q
break f server.go:31
c
n
print Parse(packet)
c
n
p
print p
c
q
clearall
break server.go:40
c
p
print p
print p.Headers
q
break server.go:40
print p.Headers
c
print p.Headers
print p.Headers[2].Value
c
exit
